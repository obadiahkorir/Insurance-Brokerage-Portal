@model KYM_Portal.Models.ClientOnBoard
@using System.IO
@using System.Configuration
@using System.Text.RegularExpressions;
@{
    ViewBag.Title = "NewGlobalClientApplications";

    int step = 1;
    try
    {
        step = Convert.ToInt32(Request.QueryString["step"].ToString());
        if (step == 0)
        {
            step = 1;
        }
    }
    catch (Exception)
    {

        step = 1;
    }
    int maxPages = 2;
}

 <!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>New Client OnBoarding Form</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Home</a></li>
                        <li class="breadcrumb-item active">Client OnBoarding Form</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>
    <!-- Main content -->
    <section class="content">
        @if (TempData["error"] != null)
        {
            <div class="alert alert-danger" id="alert-danger" role="alert">
                @TempData["error"]
            </div>

        }
        else if (TempData["success"] != null)
        {
            <div class="alert alert-success" id="alert-success" role="alert">
                @TempData["success"]
            </div>

        }
        <div class="container-fluid">
            <!-- SELECT2 EXAMPLE -->
        @if (step == 1)
        {
            using (Html.BeginForm("NewGlobalClientApplications", "ClientOnBoarding", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
            <div class="card card-success">
                <div class="card-header">
                    <h3 class="card-title">Client OnBoarding General Details</h3>
                    <div class="card-tools">
                        
                    </div>
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                
                    <div class="row">
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Customer Category</label>
                                @Html.DropDownListFor(model => model.cust_category, ViewBag.List as SelectList, "--select Customer category--", new { @class = "form-control select2", @required = "required" })
                                @Html.ValidationMessageFor(model => model.cust_category, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Country Of Residence</label>
                                @Html.DropDownListFor(model => model.countryOfResidence, ViewBag.List7 as SelectList, "--select country of residence--", new { @class = "form-control select2", id = "countryOfResidence", @required = "required" })
                                @Html.ValidationMessageFor(model => model.countryOfResidence, "", new { @class = "text-danger" })

                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Business Type</label>
                                @Html.DropDownListFor(model => model.business_type, ViewBag.List2 as SelectList, "--select Business Type--", new { @class = "form-control select2", @required = "required", id = "business_type" })
                                @Html.ValidationMessageFor(model => model.business_type, "", new { @class = "text-danger" })
                           </div>
                        </div>
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Nationality</label>
                                @Html.DropDownListFor(model => model.nationality, new SelectList(string.Empty, "Value", "Text"), "--Select Nationality--", new { @class = "form-control", id = "nationality", @required = "required" })


                                 @Html.ValidationMessageFor(model => model.nationality, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        </div>
                    <div class="=row">
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Policy Type</label>
                                @Html.DropDownListFor(model => model.policyType, new SelectList(string.Empty, "Value", "Text"), "--Select policy type--", new { @class = "form-control", id = "policyType", @required = "required" })


                                @Html.ValidationMessageFor(model => model.policyType, "", new { @class = "text-danger" })
                            </div>


                            </div>
                        </div>

                    <div class="row">

                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Id Type</label>
                                @Html.DropDownListFor(model => model.Id_Type, ViewBag.List3 as SelectList, "--select id Type--", new { @class = "form-control select2", @required = "required" })
                                @Html.ValidationMessageFor(model => model.Id_Type, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Date Of Birth</label>
                                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", @type = "date", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        </div>
                    <div class="row">
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>ID NO/Passport</label>
                                @Html.EditorFor(model => model.id_passport, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.id_passport, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Gender</label>
                                @Html.DropDownListFor(model => model.gender, ViewBag.List4 as SelectList, "--select Business Type--", new { @class = "form-control select2", @required = "required" })
                                @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                            </div>
                        </div>
                 </div>

                    <div class="row">
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Pin No</label>
                                @Html.EditorFor(model => model.pinNo, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.pinNo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>County Code</label>
                                @Html.DropDownListFor(model => model.countyCode, ViewBag.List9 as SelectList, "--select county code--", new { @class = "form-control select2", id = "countyCode", @required = "required" })
                                @Html.ValidationMessageFor(model => model.countyCode, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Title </label>
                                @Html.DropDownListFor(model => model.title, ViewBag.List5 as SelectList, "--select title--", new { @class = "form-control select2", @required = "required" })

                                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>County </label>
                                @Html.DropDownListFor(model => model.county, new SelectList(string.Empty, "Value", "Text"), "--Select County--", new { @class = "form-control", id = "county", @required = "required" })

                               @Html.ValidationMessageFor(model => model.county, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>First name </label>
                                @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Marital status </label>
                                @Html.DropDownListFor(model => model.maritalStatus, ViewBag.List6 as SelectList, "--select title--", new { @class = "form-control select2", @required = "required" })

                                @Html.ValidationMessageFor(model => model.county, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Middle name </label>
                                @Html.EditorFor(model => model.middleName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.middleName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Huduma No</label>
                                @Html.EditorFor(model => model.hudumaNo, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.hudumaNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Last name </label>
                                @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Mpesa No</label>
                                @Html.EditorFor(model => model.mpesaNo, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.mpesaNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                   

                    <h3 style="text-align:center;"><strong> Contact and Communication Detail</strong></h3>
                    <div class="row">
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Tel/Mobile No. </label>
                                @Html.EditorFor(model => model.tel_mobileNo, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.tel_mobileNo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>City</label>
                                @Html.DropDownListFor(model => model.city, new SelectList(string.Empty, "Value", "Text"), "--Select City--", new { @class = "form-control", id = "city", @required = "required" })
                                
                                 @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Tel/Mobile No2. </label>
                                @Html.EditorFor(model => model.tel_mobileNo2, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.tel_mobileNo2, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Facebook</label>
                                @Html.EditorFor(model => model.facebook, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.facebook, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Email </label>
                                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", @type = "email", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Twitter</label>
                                @Html.EditorFor(model => model.twitter, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.twitter, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Address </label>
                                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>LinkedIn</label>
                                @Html.EditorFor(model => model.linkedIn, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.linkedIn, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Postal Code </label>
                                @Html.DropDownListFor(model => model.postCode, ViewBag.List8 as SelectList, "--select postal code--", new { @class = "form-control select2", id = "postCode", @required = "required" })
                                @Html.ValidationMessageFor(model => model.postCode, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Google+</label>
                                @Html.EditorFor(model => model.googlePlus, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.googlePlus, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>




                    </div>
                <!-- /.card-body -->
                <div class="card-footer">
                    <input type="submit" value="Next" class="btn btn-primary float-right" />
                    <div class="clearfix"></div>
                </div>
               
            </div>
            }
        }
        else if (step == 2)
        {
            <div class="card card-success">
                <div class="card-header">
                    <h3 class="card-title">Policy Details </h3>
                    <div class="card-tools">
                        

                    </div>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("AddPolicy", "ClientOnBoarding", FormMethod.Post))
                    {
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="col-md-4 col-lg-4">
                            <div class="form-group">
                                <label>Applicant Type </label>
                                @Html.DropDownListFor(model => model.applicant_type, ViewBag.List17 as SelectList, "--select applicant type--", new { @class = "form-control select2", id = "invoicePeriod", @required = "required" })
                                @Html.ValidationMessageFor(model => model.applicant_type, "", new { @class = "text-danger" })
                            </div>
                          </div>
                        <div class="col-md-4 col-lg-4">
                            <div class="form-group">
                                <label>Policy Type </label>
                                @Html.EditorFor(model => model.policyType,new { htmlAttributes = new { @class = "form-control ", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.policyType, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div> 

                    <div class="row">
                        <div class="col-md-4 col-lg-4">
                            <div class="form-group">
                                <label>Product </label>
                                @Html.DropDownListFor(model => model.product, ViewBag.List14 as SelectList, "--select product--", new { @class = "form-control select2", id = "product", @required = "required" })
                                @*@Html.DropDownListFor(model => model.product, new SelectList(string.Empty, "Value", "Text"), "--Select product--", new { @class = "form-control", id = "nationality", @required = "required" })*@
                                @Html.ValidationMessageFor(model => model.product, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4 col-lg-4">
                            <div class="form-group">
                                <label>Mode of Payment </label>
                                @Html.DropDownListFor(model => model.payment_mode, ViewBag.List12 as SelectList, "--select payment mode--", new { @class = "form-control select2", id = "invoicePeriod", @required = "required" })
                                @Html.ValidationMessageFor(model => model.payment_mode, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>


                    <div class="row">
                        <div class="col-md-4 col-lg-4">
                            <div class="form-group">
                                <label>Insurer </label>
                                @Html.EditorFor(model => model.insurer, new { htmlAttributes = new { @class = "form-control" ,id= "insurer" } })
                                @Html.ValidationMessageFor(model => model.insurer, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4 col-lg-4">
                            <div class="form-group">
                                <label> Payment  code</label>
                                @Html.EditorFor(model => model.payment_code, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.payment_code, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-4 col-lg-4">
                            <div class="form-group">
                                <label>Service Period </label>
                                @Html.EditorFor(model => model.servicePeriod, new { htmlAttributes = new { @class = "form-control",id= "servicePeriod" } })
                                @Html.ValidationMessageFor(model => model.servicePeriod, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4 col-lg-4">
                            <div class="form-group">
                                <label>Financier</label>
                                @Html.DropDownListFor(model => model.financier, ViewBag.List18 as SelectList, "--please select financier--",new { @class = "form-control",id= "financier"})
                                @Html.ValidationMessageFor(model => model.financier, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-4 col-lg-4">
                            <div class="form-group">
                                <label>Invoice Period </label>
                                @Html.DropDownListFor(model => model.invoicePeriod, ViewBag.List15 as SelectList, "--select invoice period--", new { @class = "form-control select2", id = "invoicePeriod", @required = "required" })

                                @Html.ValidationMessageFor(model => model.invoicePeriod, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4 col-lg-4">
                            <div class="form-group">
                                <label>Financier Name</label>
                                @Html.EditorFor(model => model.financier_names, new { htmlAttributes = new { @class = "form-control",id= "financier_names",@readonly= "readonly" } })
                                @Html.ValidationMessageFor(model => model.financier_names, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-4 col-lg-4">
                            <div class="form-group">
                                <label>Member Type </label>
                                @Html.DropDownListFor(model => model.memberTYpe, ViewBag.List11 as SelectList, "--select member type--", new { @class = "form-control select2", id = "invoicePeriod", @required = "required" })

                                @Html.ValidationMessageFor(model => model.memberTYpe, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4 col-lg-4">
                            <div class="form-group">
                                <label>Agent Detail</label>
                                @Html.DropDownListFor(model => model.agent_detail, ViewBag.List13 as SelectList, "--select Agent Details--", new { @class = "form-control select2", id = "invoicePeriod", @required = "required" })

                                @Html.ValidationMessageFor(model => model.agent_detail, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-4 col-lg-4">
                            <div class="form-group">
                                <label>Daily Health Benefits(DHB) </label>
                                @Html.DropDownListFor(model => model.DHB, new SelectList(string.Empty, "Value", "Text"), "--Select Daily Health Benefits--", new { @class = "form-control", id = "DHB", @required = "required" })
                                @Html.ValidationMessageFor(model => model.DHB, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4 col-lg-4">
                            <div class="form-group">
                                <label>Agent Sales Person Code</label>
                                @Html.DropDownListFor(model => model.agent_salespersoncode, ViewBag.List16 as SelectList, "--select Agent Sales Person Code--", new { @class = "form-control select2", id = "invoicePeriod", @required = "required" })
                                @Html.ValidationMessageFor(model => model.agent_salespersoncode, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-4 col-lg-4">
                            <div class="form-group">
                                <label>Daily Health Benefits Premium </label>
                                @Html.EditorFor(model => model.DHB_Premium, new { htmlAttributes = new { @class = "form-control",@readonly= "readonly",id= "DHB_Premium" } })
                                @Html.ValidationMessageFor(model => model.DHB_Premium, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4 col-lg-4">
                            <div class="form-group">
                                <label>Suspend</label><br />
                                @Html.CheckBoxFor(model => model.suspend, new { htmlAttributes = new { @class = "form-control", value = "false", id= "suspend" } })
                                @Html.ValidationMessageFor(model => model.suspend, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        @*<div class="col-md-4 col-lg-4">
                            <div class="form-group">
                                <label>Total Premium </label>
                                @Html.EditorFor(model => model.DHB_Premium, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DHB_Premium, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                       
                            <div class="col-md-4 col-lg-4">
                                <div class="form-group">
                                    <label>Suspend to Date</label>
                                    @Html.EditorFor(model => model.suspend_to_date, new { htmlAttributes = new { @class = "form-control", type = "date",id= "suspend_to_date", @disabled="enabled" } })
                                    @Html.ValidationMessageFor(model => model.suspend_to_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                       


                    </div>

                    <div class="row">
                        <div class="col-md-6 col-lg-6">
                         
                                <input type="submit" value="Save Policy Details" class="btn btn-success" />
                           
                        </div>
                    </div>
                    }
                        </div>
                        <div class="card-footer">
                            @Html.ActionLink("Next", "GoStep3", "ClientOnBoarding", null, new { @class = "btn btn-primary float-right" })
                            @Html.ActionLink("Previous", "GoBackStep1", "ClientOnBoarding", null, new { @class = "btn btn-warning float-left" })
                            <div class="clearfix"></div>

                        </div>
                    </div>
                    }
        else if (step == 3)
        {
            <div class="card card-success">
                <div class="card-header">
                    <h3 class="card-title">Add Beneficiaries/Dependants </h3>
                    <div class="card-tools">

                    </div>
                </div>
                <div class="card-body">
                    <button type="button" class="btn btn-primary float-right" data-toggle="modal" data-target="#modal-dependants">
                     <span class="glyphicon glyphicon-plus-sign">Create Dependant</span>  
                    </button>
                    <br />
                    <p>List of Dependants</p>
                    <table class="table table-bordered table-striped" id="dependant">
                        <thead>
                            <tr>
                                <th>Dependant Code</th>
                                <th>Name</th>
                                <th>Relationship</th>
                                <th>DOB</th>
                                <th>ID No</th>
                                <th>Age</th>
                                <th>Dependant Type</th>
                                <th>DHB</th>
                                <th>Premium</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.dependants != null)
                            {

                                for (int i = 0; i < Model.dependants.Count(); i++)
                                {


                                    <tr>
                                        <td>@Html.DisplayFor(model=>Model.dependants[i].dependantcode)</td>
                                        <td>@Html.DisplayFor(model => Model.dependants[i].name)</td>
                                        <td>@Html.DisplayFor(model => Model.dependants[i].relationship)</td>
                                        <td>@Html.DisplayFor(model => Model.dependants[i].DOB)</td>
                                        <td>@Html.DisplayFor(model => Model.dependants[i].idNumber)</td>
                                        <td>@Html.DisplayFor(model => Model.dependants[i].age)</td>
                                        <td>@Html.DisplayFor(model => Model.dependants[i].dependantType)</td>
                                        <td>@Html.DisplayFor(model => Model.dependants[i].dhcb)</td>
                                        <td>@Html.DisplayFor(model => Model.dependants[i].premium)</td>
                                        <td>
                                            @Html.ActionLink("Delete", "Delete", new { id = Model.dependants[i].id })
                                        </td>
                                    </tr>
                                }



                            }

                        </tbody>

                    </table>

                    <button type="button" class="btn btn-info float-right" data-toggle="modal" data-target="#modal-beneficary">
                        <span class="glyphicon glyphicon-plus-sign">Create Beneficiary</span>
                    </button>
                    <br />
                    <p>List of Beneficiaries</p>
                    <table class="table table-bordered table-striped"id="beneficiary">
                        <thead>
                            <tr>
                                <th>Beneficiary</th>
                                <th>Name</th>
                                <th>Relationship</th>
                                <th>DOB</th>
                                <th>ID No</th>
                                <th>Age</th>
                                <th>Allocation</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.beneficiaries != null)
                            {

                                for (int i = 0; i < Model.beneficiaries.Count(); i++)
                                {


                                    <tr>
                                        <td>@Html.DisplayFor(model => Model.beneficiaries[i].beneficiary)</td>
                                        <td>@Html.DisplayFor(model => Model.beneficiaries[i].name)</td>
                                        <td>@Html.DisplayFor(model => Model.beneficiaries[i].relationship)</td>
                                        <td>@Html.DisplayFor(model => Model.beneficiaries[i].DOB)</td>
                                        <td>@Html.DisplayFor(model => Model.beneficiaries[i].idNumber)</td>
                                        <td>@Html.DisplayFor(model => Model.beneficiaries[i].age)</td>
                                        <td>@Html.DisplayFor(model => Model.beneficiaries[i].allocation)</td>
                                        <td>
                                            @Html.ActionLink("Delete", "Delete", new { id = Model.beneficiaries[i].id })
                                         </td>           
                                    </tr>
                                }



                            }

                        </tbody>

                    </table>

                </div>
                <div class="card-footer">
                    @Html.ActionLink("Next", "GoStep4", "ClientOnBoarding", null, new { @class = "btn btn-primary float-right" })
                    @Html.ActionLink("Previous", "GoBackStep2", "ClientOnBoarding", null, new { @class = "btn btn-warning float-left" })
                    <div class="clearfix"></div>

                </div>
            </div>
        }
        else if (step == 4)
        {
            <div class="card card-success">
                <div class="card-header">
                    <h3 class="card-title">Upload Supporting Documents </h3>
                    <div class="card-tools">

                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        @using (Html.BeginForm("UploadDocuments", "ClientOnBoarding", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="col-lg-10 col-md-10 col-sm-10 col-xs-10">
                                <div class="form-group">
                                    <h5>Upload  Documents:</h5>
                                    <input type="file" name="ImageFile" required style="padding-top: 0px;" />
                                </div>
                                <div class="form-group" style="position:absolute;top:30px;margin-left:190px;">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Upload" class="btn btn-primary" />
                                    </div>
                                </div>

                            </div>
                        }

                    </div>

                    <table class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>List of uploaded documents</th>

                                @*<th>Download</th>
                    <th>Delete</th>*@
                            </tr>
                        </thead>
                        <tbody>

                            @try
                            {
                                String fileFolderApplication = ConfigurationManager.AppSettings["FileFolderApplication"];
                                String filesFolder = ConfigurationManager.AppSettings["FilesLocation"] + "Global Client Application/";

                                string appNo = Session["appNo"].ToString();

                                String documentDirectory = filesFolder + appNo + "/";
                                if (Directory.Exists(documentDirectory))
                                {
                                    foreach (String file in Directory.GetFiles(documentDirectory, "*.*", SearchOption.AllDirectories))

                                    {
                                        String url = documentDirectory;
                                        String fileName = file.Replace(documentDirectory, "");
                                        fileName = Regex.Replace(fileName, @"[^0-9a-zA-Z]+", ",");

                                        <tr>
                                            <td>   @file.Replace(documentDirectory, "")</td>
                                            <td><a href="@Url.Action("Delete", "ClientOnBoarding",new { imageName= file.Replace(documentDirectory, "")})">Delete</a> </td>

                                            

                                        </tr>



                                    }


                                }
                            }
                            catch (Exception)
                            {

                            }
                        </tbody>

                    </table>
                </div>
                <div class="card-footer">
                     @using (Html.BeginForm("SendForApproval", "ClientOnBoarding", FormMethod.Post))
                     {
                        @Html.AntiForgeryToken()
                        <input type="submit" value="Send For Approval" class="btn btn-primary float-right" />
                     }
                    @Html.ActionLink("Previous", "GoBackStep3", "ClientOnBoarding", null, new { @class = "btn btn-warning float-left" })
                    <div class="clearfix"></div>
                    
                </div>
            </div>

        }

        </div><!-- /.container-fluid -->
    </section>


    <div class="modal fade" id="modal-dependants">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Add Dependants</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
@using (Html.BeginForm("AddDependant", "ClientOnBoarding", FormMethod.Post))
            {
    @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div class="row">
                     <div class="col-md-6 col-lg-6">
                        <div class="form-group">
                            <label>Dependant Code </label>
                            @Html.EditorFor(model => model.dependantcode, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.insurer, "", new { @class = "text-danger" })
                        </div>
                        </div>
                    <div class="col-md-6 col-lg-6">
                        <div class="form-group">
                            <label>Name </label>
                            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                        </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Relationship </label>
                                @Html.DropDownListFor(model => model.relationship, ViewBag.List20 as SelectList, "--select relationship--", new { @class = "form-control select2",@required = "required" })

                                @Html.ValidationMessageFor(model => model.relationship, "", new { @class = "text-danger" })
                            </div>
                            </div>
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Date Of Birth </label>
                                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", type = "date", required = "required" } })
                                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                            </div>
                            </div>
                        </div>
                    <div class="row">
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Id number </label>
                                @Html.EditorFor(model => model.idNumber, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0", required = "required" } })
                                @Html.ValidationMessageFor(model => model.idNumber, "", new { @class = "text-danger" })
                            </div>
                            </div>
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Age </label>
                                @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0", step = "0.01", required = "required" } })
                                @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
                            </div>
                            </div>
                        </div>
                    <div class="row">
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>Dependant Type </label>
                                @Html.DropDownListFor(model => model.dependantType, ViewBag.List21 as SelectList, "--select dependant type--", new { @class = "form-control select2", @required = "required" })

                                @Html.ValidationMessageFor(model => model.dependantType, "", new { @class = "text-danger" })
                            </div>
                            </div>
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>DHB </label>
                                @Html.DropDownListFor(model => model.DHB, ViewBag.List22 as SelectList, "--select dhb--", new { @class = "form-control select2", @required = "required" })
          @*@Html.EditorFor(model => model.DHB, new { htmlAttributes = new { @class = "form-control", required = "required",id= "DHB" } })*@
                                @Html.ValidationMessageFor(model => model.DHB, "", new { @class = "text-danger" })
                            </div>
                            </div>
                        </div>
                    <div class="row">
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group">
                                <label>DHB Premium</label>
                                @Html.EditorFor(model => model.DHB_Premium, new { htmlAttributes = new { @class = "form-control", required = "required",id= "DHB_Premium",@readonly= "readonly" } })
                                @Html.ValidationMessageFor(model => model.DHB_Premium, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        </div>

                    </div>
                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <input type="submit" class="btn btn-primary" value="Add Dependant"/>
                </div>
                }
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>

    <div class="modal fade" id="modal-beneficary">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Add Beneficiary</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            @using (Html.BeginForm("AddBeneficiary", "ClientOnBoarding", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div class="form-group">
                        <label>Beneficiary </label>
                        @Html.EditorFor(model => model.dependantcode, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.insurer, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Name </label>
                        @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Relationship </label>
                       @Html.DropDownListFor(model => model.relationship, ViewBag.List20 as SelectList, "--select relationship--", new { @class = "form-control select2", @required = "required" })
                        @Html.ValidationMessageFor(model => model.relationship, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Date Of Birth </label>
                        @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", type = "date", required = "required" } })
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Id number </label>
                        @Html.EditorFor(model => model.idNumber, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0", required = "required" } })
                        @Html.ValidationMessageFor(model => model.idNumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Age </label>
                        @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0", step = "0.01", required = "required" } })
                        @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Allocation </label>
                        @Html.EditorFor(model => model.allocation, new { htmlAttributes = new { @class = "form-control", required = "required", type = "number", min = "0", step = "0.01" } })
                        @Html.ValidationMessageFor(model => model.allocation, "", new { @class = "text-danger" })
                    </div>
                   
                </div>
                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <input type="submit" class="btn btn-primary" value="Add Beneficiary" />
                </div>
            }
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->



